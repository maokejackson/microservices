server:
  port: 8082

feign:
  hystrix:
    enabled: false

eureka:
  client:
    enabled: false

keycloak:
  realm: microservices
  auth-server-url: http://localhost:8180/auth
  ssl-required: external
  use-resource-role-mappings: true
  principal-attribute: preferred_username
  resource: movie-service
  credentials:
    secret: eb254855-2ac2-4799-87e0-6170594b4a61
  bearer-only: true

spring:
  application:
    name: movie-service
  cloud:
    config:
      enabled: false
  datasource:
    url: jdbc:h2:mem:movies
    driver-class-name: org.h2.Driver
    username: sa
  jpa:
    open-in-view: false
  security:
    oauth2:
      client:
        registration:
          movie-service:
            provider: keycloak
            client-id: ${keycloak.resource}
            client-secret: ${keycloak.credentials.secret}
        provider:
          keycloak:
            authorization-uri: ${keycloak.auth-server-url}/realms/microservices/protocol/openid-connect/auth
            token-uri: ${keycloak.auth-server-url}/realms/microservices/protocol/openid-connect/token
            user-info-uri: ${keycloak.auth-server-url}/realms/microservices/protocol/openid-connect/userinfo
            jwk-set-uri: ${keycloak.auth-server-url}/realms/microservices/protocol/openid-connect/certs
            user-name-attribute: ${keycloak.principal-attribute}
      resourceserver:
        jwt.jwk-set-uri: ${keycloak.auth-server-url}/realms/microservices/protocol/openid-connect/certs
